{"remainingRequest":"C:\\Users\\AndriiKharyshyn\\Documents\\vuestic-admin\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\AndriiKharyshyn\\Documents\\vuestic-admin\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\AndriiKharyshyn\\Documents\\vuestic-admin\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\AndriiKharyshyn\\Documents\\vuestic-admin\\frontend\\src\\components\\main-page\\main-page-inner\\InterpretationTab.vue?vue&type=template&id=02c4395e&","dependencies":[{"path":"C:\\Users\\AndriiKharyshyn\\Documents\\vuestic-admin\\frontend\\src\\components\\main-page\\main-page-inner\\InterpretationTab.vue","mtime":1583148117914},{"path":"C:\\Users\\AndriiKharyshyn\\Documents\\vuestic-admin\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\AndriiKharyshyn\\Documents\\vuestic-admin\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\AndriiKharyshyn\\Documents\\vuestic-admin\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\AndriiKharyshyn\\Documents\\vuestic-admin\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}